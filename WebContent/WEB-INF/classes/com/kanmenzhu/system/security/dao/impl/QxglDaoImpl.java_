package com.kanmenzhu.system.security.dao.impl;

import java.util.List;
import java.util.Map;

import com.wondersgroup.framework.base.BaseDao;
import com.wondersgroup.qxgl.dao.QxglDao;

public class QxglDaoImpl extends BaseDao implements QxglDao {
	public List queryPwdForUser(Map map)throws Exception {
		List list = this.getSqlMapClientTemplate().queryForList("queryPasswordByUser",map);
		return list;
	 
	}
	public int modiUser(Map map)throws Exception{
		int list=this.getSqlMapClientTemplate().update("modiUser", map);
		return list;
	}
	public Integer creatUser(Map map)throws Exception{
		Integer list=(Integer)this.getSqlMapClientTemplate().insert("creatUser", map);
		return list;
	}
	public List queryUserByCon(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserByCon", map);
		return list;
	}
	public List queryUser(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUser", map);
		return list;
	}
	public List queryUserBydelTag(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserBydelTag", map);
		return list;
	}
	public List queryUserRole(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserRole", map);
		return list;
	}
	public int markUserDeltag(Map map)throws Exception{
		int list=this.getSqlMapClientTemplate().update("markUserDeltag", map);
		return list;
	}
	public int delUserByUserid(Integer userid)throws Exception{
		int retu=this.getSqlMapClientTemplate().delete("delUserByUserid", userid);
		return retu;
	}
	public int delQxByUserid(Integer userid)throws Exception{
		int retu=this.getSqlMapClientTemplate().delete("delQxByUserid", userid);
		return retu;
	}
	public int modiPwd(Map map)throws Exception{
		int list=this.getSqlMapClientTemplate().update("modiPwd", map);
		return list;
	}
	public List queryUserById(Integer map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserById", map);
		return list;
	}
	
	public List queryRoleByRolename(String map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleByRolename", map);
		return list;
	}
	public List queryRoleById(Integer map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleById", map);
		return list;
	}
	public List queryRoleByCon(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleByCon", map);
		return list;
	}
	public List queryRoleByDeltag(String map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleByDeltag", map);
		return list;
	}
	public int creatRole(Map map)throws Exception{
		int retu=((Integer)this.getSqlMapClientTemplate().insert("creatRole", map)).intValue();
		return retu;
	}
	public int markRoleDeltag(Map map)throws Exception{
		int retu=this.getSqlMapClientTemplate().update("markRoleDeltag", map);
		return retu;
	}
	public int modiRole(Map map)throws Exception{
		int retu=this.getSqlMapClientTemplate().update("modiRole", map);
		return retu;
	}
	public List queryRoleNotConUser(Integer  map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleNotConUser", map);
		return list;
	}
	public List queryRoleConUser(Integer  map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryRoleConUser", map);
		return list;
	}
	public List queryUserNotConRole(Integer  map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserNotConRole", map);
		return list;
	}
	public List queryUserConRole(Integer  map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryUserConRole", map);
		return list;
	}
	public int adjustRoleUser(Map map)throws Exception{
		//int retu=((Integer)this.getSqlMapClientTemplate().insert("adjustRoleUser", map)).intValue();
		this.getSqlMapClientTemplate().insert("adjustRoleUser", map);
		return 0;
		
	}
	public int gYdkbReport(Map map)throws Exception{
		int retu=((Integer)this.getSqlMapClientTemplate().insert("gYdkbReport", map)).intValue();
		return retu;
	}
	public int gSumReport(Map map)throws Exception{
		int retu=((Integer)this.getSqlMapClientTemplate().insert("gSumReport", map)).intValue();
		return retu;
	}
	public List queryYdkbSumReport(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryYdkbSumReport", map);
		return list;
	}
	public int delQxByUR(Map map)throws Exception{
		int retu=this.getSqlMapClientTemplate().delete("delQxByUR", map);
		return retu;
	}
	
	public List queryAllMenu()throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryAllMenu", null);
		return list;
	}
	public List queryAccessByRoleid(Integer map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryAccessByRoleid",map);
		return list;
	}
	
	public int delAccessByRoleid(Integer map)throws Exception{
		int retu=this.getSqlMapClientTemplate().delete("delAccessByRoleid", map);
		return retu;
	}
	public int setAccessToRole(Map map)throws Exception{
		//int retu=((Integer)this.getSqlMapClientTemplate().insert("setAccessToRole", map)).intValue();
		//return retu;
		this.getSqlMapClientTemplate().insert("setAccessToRole", map);
		return 0;
	}
	
	public List queryMainMenuByUserid(Integer userid)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryMainMenuByUserid",userid);
		return list;
	}
	public List querySubMenuByCon(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("querySubMenuByCon",map);
		return list;
	}
	public List countSubMenuConLink(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("countSubMenuConLink",map);
		return list;
	}
	public List countMainMenuConSub(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("countMainMenuConSub",map);
		return list;
	}
	public List countMainMenu(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("countMainMenu",map);
		return list;
	}
	public List queryMainMenuNameBySubid(String mnstartid)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryMainMenuBySubid",mnstartid);
		return list;
	}
	public List queryAccessByPage(Map map)throws Exception{
		List list=this.getSqlMapClientTemplate().queryForList("queryAccessByPage", map);
		return list;
	}
	public int delOpera(String queryStatmentId,Map map) throws Exception {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().delete(queryStatmentId, map);
	}
	public int insertOpera(String queryStatmentId,Map map) throws Exception {
		// TODO Auto-generated method stub
		this.getSqlMapClientTemplate().insert(queryStatmentId, map);
		return 0;
	}
	public List queryForList(String queryStatmentId,Map map) throws Exception {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().queryForList(queryStatmentId,map);
	}
	public int updateOpera(String queryStatmentId,Map map) throws Exception {
		// TODO Auto-generated method stub
		return this.getSqlMapClientTemplate().update(queryStatmentId, map);
	}

}
